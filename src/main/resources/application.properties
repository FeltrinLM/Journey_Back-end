spring.application.name=Journey_Back-end

# === Datasource ===
spring.datasource.url=jdbc:postgresql://localhost:5432/journey_db
spring.datasource.username=postgres
spring.datasource.password=1234
spring.datasource.driver-class-name=org.postgresql.Driver

# === JPA/Hibernate ===
# Vamos deixar o Flyway cuidar do schema, e o Hibernate apenas VALIDAR.
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# IMPORTANTE: não converter nomes para snake_case automaticamente.
# Mantém os nomes como definidos nas entidades (ex.: usuarioId -> usuarioid no Postgres).
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# === Flyway ===
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.schemas=public

# Como você não tem dados e quer só rodar, vamos LIMPAR o schema se houver conflito e migrar do zero.
spring.flyway.clean-disabled=false
spring.flyway.clean-on-validation-error=true
spring.flyway.validate-on-migrate=true

# === JWT (como você já tinha) ===
jwt.secret=meuSegredoJWTsuperSeguro123456
# Tempo de expiração do token JWT (em milissegundos = 24h)
jwt.expiration=86400000
