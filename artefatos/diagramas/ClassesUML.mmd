classDiagram

%%Models
    class Colecao {
        - int colecao_id
        - String nome
        - LocalDate dataInicio
        - LocalDate dataFim
        +getColecao_Id(): int
        +setColecao_Id(int): void
        +getNome(): String
        +setNome(String): void
        +getDataInicio(): LocalDate
        +setDataInicio(LocalDate): void
        +getDataFim(): LocalDate
        +setDataFim(LocalDate): void
        +getEstampas(): List<Estampa>
        +getChaveiros(): List<Chaveiro>
    }

    class Estampa {
        - int estampa_id
        - String nome
        - int quantidade
        - Colecao colecao
        +getEstampa_id(): int
        +setEstampa_id(int): void
        +getNome(): String
        +setNome(String): void
        +getQuantidade(): int
        +setQuantidade(int): void
        +getColecao(): Colecao
        +setColecao(Colecao): void
    }

    class Peca {
        - int peca_id
        - String tipo
        - String tamanho
        - String cor
        - int quantidade
        +getPeca_id(): int
        +setPeca_id(int): void
        +getTipo(): String
        +setTipo(String): void
        +getTamanho(): String
        +setTamanho(String): void
        +getCor(): String
        +setCor(String): void
        +getQuantidade(): int
        +setQuantidade(int): void
    }


    class Chaveiro {
        - int chaveiro_id
        - String chaveiro_modelo
        - Colecao colecao
        +getChaveiro_id(): int
        +setChaveiro_id(int): void
        +getChaveiro_modelo(): String
        +setChaveiro_modelo(String): void
        +getColecao(): Colecao
        +setColecao(Colecao): void
    }

    class Adesivo {
        - int adesivo_id
        - String adesivo_modelo
        - boolean cromatico
        +getAdesivo_id(): int
        +setAdesivo_id(int): void
        +getAdesivo_modelo(): String
        +setAdesivo_modelo(String): void
        +isCromatico(): boolean
        +setCromatico(boolean): void
    }

    class Usuario {
        - int usuario_id
        - String nome
        - String senha
        - TipoUsuario tipo
        +Usuario()
        +Usuario(String nome, String senha, TipoUsuario tipo)
        +getUsuario_id(): int
        +setUsuario_id(int): void
        +getNome(): String
        +setNome(String): void
        +getSenha(): String
        +setSenha(String): void
        +getTipo(): TipoUsuario
        +setTipo(TipoUsuario): void
    }

    class TipoUsuario {
        <<enumeration>>
        ADMINISTRADOR
        FUNCIONARIO
        }

Colecao "1" --> "n" Estampa : contem
Colecao "1" --> "n" Chaveiro : contem
Usuario --> TipoUsuario : tipo

%%Repositorys

    class ColecaoRepository {
    }

    class EstampaRepository {
    }

    class PecaRepository {
    }

    class ChaveiroRepository {
    }

    class AdesivoRepository {
    }

    class UsuarioRepository {
    }

%%Services

    class ColecaoService {
    }

    class EstampaService {
    }

    class PecaService {
    }

    class ChaveiroService {
    }

    class AdesivoService {
    }

    class UsuarioService {
    }

%%Mappers

    class ColecaoMapper {
    }

    class EstampaMapper{
    }

    class PecaMapper {
    }


    class ChaveiroMapper {
    }

    class AdesivoMapper {
    }

    class UsuarioMapper {
    }

%%Controllers

    class ColecaoController {
    }

    class EstampaController {
    }

    class PecaController {
    }

    class ChaveiroController {
    }

    class AdesivoController {
    }

    class UsuarioController {
    }

%%Relacoes

AdesivoController -->AdesivoService : chama
AdesivoService -->AdesivoRepository : persiste/busca
AdesivoService -->AdesivoMapper : converteDTO<->Model
AdesivoRepository -->Adesivo: trabalha com a entidade
AdesivoMapper --> Adesivo
AdesivoMapper --> AdesivoDTO

ColecaoController -->ColecaoService : chama
ColecaoService -->ColecaoRepository : persiste/busca
ColecaoService -->ColecaoMapper : converteDTO<->Model
ColecaoRepository -->Colecao: trabalha com a entidade
ColecaoMapper --> Colecao
ColecaoMapper --> ColecaoDTO

EstampaController -->EstampaService : chama
EstampaService -->EstampaRepository : persiste/busca
EstampaService -->EstampaMapper : converteDTO<->Model
EstampaRepository -->Estampa: trabalha com a entidade
EstampaMapper --> Estampa
EstampaMapper --> EstampaDTO

PecaController -->PecaService : chama
PecaService -->PecaRepository : persiste/busca
PecaService -->PecaMapper : converteDTO<->Model
PecaRepository -->Peca: trabalha com a entidade
PecaMapper -->Peca
PecaMapper --> PecaDTO

ChaveiroController -->ChaveiroService : chama
ChaveiroService -->ChaveiroRepository : persiste/busca
ChaveiroService -->ChaveiroMapper : converteDTO<->Model
ChaveiroRepository -->Chaveiro: trabalha com a entidade
ChaveiroMapper --> Chaveiro
ChaveiroMapper --> ChaveiroDTO

UsuarioController -->UsuarioService : chama
UsuarioService -->UsuarioRepository : persiste/busca
UsuarioService -->UsuarioMapper : converteDTO<->Model
UsuarioRepository -->Usuario: trabalha com a entidade
UsuarioMapper --> Usuario
UsuarioMapper --> UsuarioDTO



